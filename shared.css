body {
  font-family: "Archivo", sans-serif;
  margin: 0;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: absolute;
  padding: 15px 60px;
  width: 100%;
  box-sizing: border-box;
}

#page-logo a {
  padding: 10px;
  font-family: "Karla", sans-serif;
  color: rgb(245, 243, 160);
  font-size: 50px;
  font-weight: 900;
  text-decoration: none;
  text-transform: uppercase;
  /* text-transform = 텍스트가 외적으로 어떻게 보여지는지 결정함 */
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
  /* text-shadow: 1px(가로) 1px(세로) 2px(블러 반경) rgb(0, 0, 0)(컬러), 컬러에 rgba=(r, g, b, (농도)); */
}

header ul {
  display: flex;
}

header li {
  margin-left: 20px;
}

header a {
  color: rgb(255, 251, 0);
  text-decoration: none;
  font-size: 16px;
  padding: 12px;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0);
  border-radius: 6px;
}

header nav a:hover {
  color: rgb(77, 77, 77);
  background-color: rgb(255, 251, 0);
}

#highlight {
  padding: 24px;
  background: linear-gradient(0deg, rgb(227, 255, 253), rgb(202, 243, 240));
  /* background: linear-gradient(각도(deg, 색상);
  CSS에는 'Functions'이 있다 이 펑션은 특정 오퍼레이션을 자동으로 적용해준다.
  선형 그라데이션 경우 CSS에는 선형 그라데이션 펑션이 있다. 
  각도가 0일 경우, 시작하는 색이 밑에 있고, 위로 올라가며 그라데이션.*/
}

#highlight h2 {
  text-align: center;
  text-transform: uppercase;
  font-size: 40px;
  color: rgb(59, 65, 64);
  margin: 24px 0;
}

#destinations {
  display: flex;
  width: 90%;
  margin: auto;
  margin-bottom: 40px;
  justify-content: center;
  /* justify-content: 은 Aligns flex items along the main axis of the current line of the flex container. */
}

/* .desti--, #desti-- => .은 클래스, #은 id 셀렉터. */

.destinations {
  margin: 0 20px;
  text-transform: uppercase;
  /* text-transform: => 텍스트가 어떻게 보이는지. */
}

.destinations p {
  text-align: center;
  font-size: 24px;
  color: rgb(124, 123, 123);
  margin: 20px 0;
}

.destinations strong {
  color: rgb(0, 160, 117);
}

.destinations img {
  height: 200px;
  width: 100%;
  box-shadow: 2px 4px 8px rgb(68, 67, 67);
  border-radius: 10px;
  object-fit: cover;
  /* object-fit: fill => 컨텐츠 ex.사진 들을 창 크기에 따라 리사이징 해주는 것.
  그런데, 확대하거나 축소함에 따라 이미지 크기 왜곡이 있을 수 있음.
  cpntain는 종횡비가 그대로 남아서 이미지가 컨테이너에 맞게 조절됨. 
  이 또한 완벽하지는 않은데, 이 이미지를 컨테이너에 완벽하게 맞춰주는 값은 cover */
}

/* ul li a {
  text-decoration: none;
} */

footer {
  background-color: black;
  text-align: center;
}

footer img {
  width: 80px;
  height: 80px;
  padding: 24px;
}
